// ==============================================================
// File generated by Xilinx Model Composer(TM)
// Version: 2020.2
//  
// (c) Copyright 2017 - 2020 Xilinx, Inc. All rights reserved.
//  
// This file contains confidential and proprietary information
// of Xilinx, Inc. and is protected under U.S. and
// international copyright and other intellectual property
// laws.
//  
// DISCLAIMER
// This disclaimer is not a license and does not grant any
// rights to the materials distributed herewith. Except as
// otherwise provided in a valid license issued to you by
// Xilinx, and to the maximum extent permitted by applicable
// law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
// WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
// AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
// BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
// INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
// (2) Xilinx shall not be liable (whether in contract or tort,
// including negligence, or under any other theory of
// liability) for any loss or damage of any kind or nature
// related to, arising under or in connection with these
// materials, including for any direct, or any indirect,
// special, incidental, or consequential loss or damage
// (including loss of data, profits, goodwill, or any type of
// loss or damage suffered as a result of any action brought
// by a third party) even if such damage or loss was
// reasonably foreseeable or Xilinx had been advised of the
// possibility of the same.
//  
// CRITICAL APPLICATIONS
// Xilinx products are not designed or intended to be fail-
// safe, or for use in any application requiring fail-safe
// performance, such as life-support or safety devices or
// systems, Class III medical devices, nuclear facilities,
// applications related to the deployment of airbags, or any
// other applications that could lead to death, personal
// injury, or severe property or environmental damage
// (individually and collectively, "Critical
// Applications"). Customer assumes the sole risk and
// liability of any use of Xilinx products in Critical
// Applications, subject only to applicable laws and
// regulations governing limitations on product liability.
//  
// THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
// PART OF THIS FILE AT ALL TIMES.
// ==============================================================
#ifndef __XMC_WIN_IN_WIN_OUT_H__
#define __XMC_WIN_IN_WIN_OUT_H__

#include <adf.h>
#include "src/kernels/window_in_window_out_fixed_size.h"

class Win_in_win_out : public adf::graph {
private:
   adf::kernel add_kernel_0;

public:
   adf::input_port In1, In2;
   adf::output_port Out1;

   Win_in_win_out() {
      // create kernel add_kernel_0
      add_kernel_0 = adf::kernel::create(add_kernel);
      adf::source(add_kernel_0) = "src/kernels/window_in_window_out_fixed_size.cc";
      adf::runtime<ratio>(add_kernel_0) = 0.9;

      // create nets to specify connections
      adf::connect< adf::window<32> > net0 (In1, sync(add_kernel_0.in[0]));
      adf::connect< adf::window<32> > net1 (In2, sync(add_kernel_0.in[1]));
      adf::connect< adf::window<32> > net2 (sync(add_kernel_0.out[0]), Out1);
   }
};

#endif // __XMC_WIN_IN_WIN_OUT_H__
