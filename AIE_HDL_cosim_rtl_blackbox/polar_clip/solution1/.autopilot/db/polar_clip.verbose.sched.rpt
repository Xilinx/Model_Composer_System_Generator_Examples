

================================================================
== Vitis HLS Report for 'polar_clip'
================================================================
* Date:           Fri Jun 12 13:45:53 2020

* Version:        2020.1 (Build 2902540 on Wed May 27 20:16:15 MDT 2020)
* Project:        polar_clip
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcvu11p-flga2577-1-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 3.300 ns |   2.70 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       18|       18| 0.180 us | 0.180 us |   19|   19|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_71_1  |        5|        5|         1|          1|          1|     5|    yes   |
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 14
* Pipeline : 1
  Pipeline-0 : II = 1, D = 1, States = { 6 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 6 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.69>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%empty = read i41 @_ssdm_op_Read.axis.volatile.i32P.i4P.i4P.i1P, i32 %in_sample_V_data_V, i4 %in_sample_V_keep_V, i4 %in_sample_V_strb_V, i1 %in_sample_V_last_V"   --->   Operation 15 'read' 'empty' <Predicate = true> <Delay = 0.00> <CoreInst = "axis">   --->   Core 57 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%tmp_data_V_1 = extractvalue i41 %empty"   --->   Operation 16 'extractvalue' 'tmp_data_V_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%value_real = trunc i32 %tmp_data_V_1" [src/polar_clip.cpp:133]   --->   Operation 17 'trunc' 'value_real' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%value_imag = partselect i16 @_ssdm_op_PartSelect.i16.i32.i32.i32, i32 %tmp_data_V_1, i32, i32" [src/polar_clip.cpp:134]   --->   Operation 18 'partselect' 'value_imag' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%sext_ln151 = sext i16 %value_real" [src/polar_clip.cpp:151]   --->   Operation 19 'sext' 'sext_ln151' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [4/4] (0.69ns) (root node of the DSP)   --->   "%value_real_sq_V = mul i32 %sext_ln151, i32 %sext_ln151" [src/polar_clip.cpp:151]   --->   Operation 20 'mul' 'value_real_sq_V' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%ret_V = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %tmp_data_V_1, i32"   --->   Operation 21 'bitselect' 'ret_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %tmp_data_V_1, i32"   --->   Operation 22 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 1.08>
ST_2 : Operation 23 [3/4] (0.69ns) (root node of the DSP)   --->   "%value_real_sq_V = mul i32 %sext_ln151, i32 %sext_ln151" [src/polar_clip.cpp:151]   --->   Operation 23 'mul' 'value_real_sq_V' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%sext_ln152 = sext i16 %value_imag" [src/polar_clip.cpp:152]   --->   Operation 24 'sext' 'sext_ln152' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [3/3] (1.08ns) (grouped into DSP with root node mag_sq_V)   --->   "%value_imag_sq_V = mul i32 %sext_ln152, i32 %sext_ln152" [src/polar_clip.cpp:152]   --->   Operation 25 'mul' 'value_imag_sq_V' <Predicate = true> <Delay = 1.08> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>

State 3 <SV = 2> <Delay = 1.08>
ST_3 : Operation 26 [2/4] (0.69ns) (root node of the DSP)   --->   "%value_real_sq_V = mul i32 %sext_ln151, i32 %sext_ln151" [src/polar_clip.cpp:151]   --->   Operation 26 'mul' 'value_real_sq_V' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 27 [2/3] (1.08ns) (grouped into DSP with root node mag_sq_V)   --->   "%value_imag_sq_V = mul i32 %sext_ln152, i32 %sext_ln152" [src/polar_clip.cpp:152]   --->   Operation 27 'mul' 'value_imag_sq_V' <Predicate = true> <Delay = 1.08> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>

State 4 <SV = 3> <Delay = 0.83>
ST_4 : Operation 28 [1/4] (0.00ns) (root node of the DSP)   --->   "%value_real_sq_V = mul i32 %sext_ln151, i32 %sext_ln151" [src/polar_clip.cpp:151]   --->   Operation 28 'mul' 'value_real_sq_V' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 29 [1/3] (0.00ns) (grouped into DSP with root node mag_sq_V)   --->   "%value_imag_sq_V = mul i32 %sext_ln152, i32 %sext_ln152" [src/polar_clip.cpp:152]   --->   Operation 29 'mul' 'value_imag_sq_V' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 30 [2/2] (0.83ns) (root node of the DSP)   --->   "%mag_sq_V = add i32 %value_real_sq_V, i32 %value_imag_sq_V"   --->   Operation 30 'add' 'mag_sq_V' <Predicate = true> <Delay = 0.83> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>

State 5 <SV = 4> <Delay = 2.92>
ST_5 : Operation 31 [1/1] (0.00ns)   --->   "%spectopmodule_ln0 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_3"   --->   Operation 31 'spectopmodule' 'spectopmodule_ln0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 32 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32, void @empty_4, i32, i32, void @empty_1, i32, i32, void @empty_1, void @empty_1, void @empty_1, i32, i32, i32, i32, void @empty_1, void @empty_1"   --->   Operation 32 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 33 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %in_sample_V_data_V, i4 %in_sample_V_keep_V, i4 %in_sample_V_strb_V, i1 %in_sample_V_last_V, void @empty, i32, i32, void @empty_0, i32, i32, void @empty_1, void @empty_1, void @empty_1, i32, i32, i32, i32, void @empty_1, void @empty_1"   --->   Operation 33 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 34 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %in_sample_V_data_V"   --->   Operation 34 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 35 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i4 %in_sample_V_keep_V"   --->   Operation 35 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 36 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i4 %in_sample_V_strb_V"   --->   Operation 36 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 37 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %in_sample_V_last_V"   --->   Operation 37 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 38 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %out_sample_V_data_V, i4 %out_sample_V_keep_V, i4 %out_sample_V_strb_V, i1 %out_sample_V_last_V, void @empty, i32, i32, void @empty_0, i32, i32, void @empty_1, void @empty_1, void @empty_1, i32, i32, i32, i32, void @empty_1, void @empty_1"   --->   Operation 38 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 39 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %out_sample_V_data_V"   --->   Operation 39 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 40 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i4 %out_sample_V_keep_V"   --->   Operation 40 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 41 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i4 %out_sample_V_strb_V"   --->   Operation 41 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 42 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %out_sample_V_last_V"   --->   Operation 42 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 43 [1/1] (0.00ns)   --->   "%sext_ln151_1 = sext i16 %value_real" [src/polar_clip.cpp:151]   --->   Operation 43 'sext' 'sext_ln151_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 44 [1/1] (0.00ns)   --->   "%sext_ln152_1 = sext i16 %value_imag" [src/polar_clip.cpp:152]   --->   Operation 44 'sext' 'sext_ln152_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 45 [1/2] (0.83ns) (root node of the DSP)   --->   "%mag_sq_V = add i32 %value_real_sq_V, i32 %value_imag_sq_V"   --->   Operation 45 'add' 'mag_sq_V' <Predicate = true> <Delay = 0.83> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 46 [1/1] (1.12ns)   --->   "%abs_I_V = sub i17, i17 %sext_ln151_1"   --->   Operation 46 'sub' 'abs_I_V' <Predicate = (tmp)> <Delay = 1.12> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.12> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 47 [1/1] (0.32ns)   --->   "%select_ln46 = select i1 %tmp, i17 %abs_I_V, i17 %sext_ln151_1" [src/polar_clip.cpp:46->src/polar_clip.cpp:159]   --->   Operation 47 'select' 'select_ln46' <Predicate = true> <Delay = 0.32> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 48 [1/1] (0.00ns)   --->   "%sext_ln890 = sext i17 %select_ln46"   --->   Operation 48 'sext' 'sext_ln890' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 49 [1/1] (1.12ns)   --->   "%abs_Q_V = sub i17, i17 %sext_ln152_1"   --->   Operation 49 'sub' 'abs_Q_V' <Predicate = (ret_V)> <Delay = 1.12> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.12> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 50 [1/1] (0.32ns)   --->   "%select_ln52 = select i1 %ret_V, i17 %abs_Q_V, i17 %sext_ln152_1" [src/polar_clip.cpp:52->src/polar_clip.cpp:159]   --->   Operation 50 'select' 'select_ln52' <Predicate = true> <Delay = 0.32> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 51 [1/1] (0.00ns)   --->   "%sext_ln69 = sext i17 %select_ln52"   --->   Operation 51 'sext' 'sext_ln69' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 52 [1/1] (1.12ns)   --->   "%X_step_V = add i18 %sext_ln890, i18 %sext_ln69"   --->   Operation 52 'add' 'X_step_V' <Predicate = true> <Delay = 1.12> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.12> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 53 [1/1] (0.00ns)   --->   "%sext_ln41 = sext i18 %X_step_V" [src/polar_clip.cpp:41->src/polar_clip.cpp:159]   --->   Operation 53 'sext' 'sext_ln41' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 54 [1/1] (0.94ns)   --->   "%icmp_ln894 = icmp_slt  i17 %select_ln52, i17 %select_ln46"   --->   Operation 54 'icmp' 'icmp_ln894' <Predicate = true> <Delay = 0.94> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 55 [1/1] (0.14ns)   --->   "%xor_ln894_1 = xor i1 %icmp_ln894, i1"   --->   Operation 55 'xor' 'xor_ln894_1' <Predicate = true> <Delay = 0.14> <CoreInst = "LogicGate">   --->   Core 12 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 56 [1/1] (1.12ns)   --->   "%Y_step_V = sub i18 %sext_ln69, i18 %sext_ln890"   --->   Operation 56 'sub' 'Y_step_V' <Predicate = true> <Delay = 1.12> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.12> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 57 [1/1] (1.12ns)   --->   "%Y_step_V_1 = sub i18 %sext_ln890, i18 %sext_ln69"   --->   Operation 57 'sub' 'Y_step_V_1' <Predicate = true> <Delay = 1.12> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.12> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 58 [1/1] (0.35ns)   --->   "%select_ln63 = select i1 %xor_ln894_1, i18 %Y_step_V_1, i18 %Y_step_V" [src/polar_clip.cpp:63->src/polar_clip.cpp:159]   --->   Operation 58 'select' 'select_ln63' <Predicate = true> <Delay = 0.35> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 59 [1/1] (0.00ns)   --->   "%sext_ln71 = sext i18 %select_ln63" [src/polar_clip.cpp:71->src/polar_clip.cpp:159]   --->   Operation 59 'sext' 'sext_ln71' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 60 [1/1] (0.73ns)   --->   "%br_ln71 = br void" [src/polar_clip.cpp:71->src/polar_clip.cpp:159]   --->   Operation 60 'br' 'br_ln71' <Predicate = true> <Delay = 0.73>

State 6 <SV = 5> <Delay = 2.70>
ST_6 : Operation 61 [1/1] (0.00ns)   --->   "%rotation_index_V = phi i32 %select_ln886, void %_ifconv.i, i32, void %bb443_ifconv"   --->   Operation 61 'phi' 'rotation_index_V' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 62 [1/1] (0.00ns)   --->   "%X_step_V_1 = phi i32 %select_ln886_2, void %_ifconv.i, i32 %sext_ln41, void %bb443_ifconv"   --->   Operation 62 'phi' 'X_step_V_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 63 [1/1] (0.00ns)   --->   "%Y_step_V_2 = phi i32 %select_ln886_1, void %_ifconv.i, i32 %sext_ln71, void %bb443_ifconv"   --->   Operation 63 'phi' 'Y_step_V_2' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 64 [1/1] (0.00ns)   --->   "%i_V = phi i3 %add_ln695, void %_ifconv.i, i3, void %bb443_ifconv"   --->   Operation 64 'phi' 'i_V' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 65 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32, i32, i32, i32, void @p_str"   --->   Operation 65 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 66 [1/1] (0.56ns)   --->   "%icmp_ln882 = icmp_eq  i3 %i_V, i3"   --->   Operation 66 'icmp' 'icmp_ln882' <Predicate = true> <Delay = 0.56> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 67 [1/1] (0.00ns)   --->   "%empty_11 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64, i64, i64"   --->   Operation 67 'speclooptripcount' 'empty_11' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 68 [1/1] (0.00ns)   --->   "%br_ln71 = br i1 %icmp_ln882, void %_ifconv.i, void %cos_sin_mag.exit" [src/polar_clip.cpp:71->src/polar_clip.cpp:159]   --->   Operation 68 'br' 'br_ln71' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 69 [1/1] (0.00ns)   --->   "%i_V_i_cast3 = zext i3 %i_V"   --->   Operation 69 'zext' 'i_V_i_cast3' <Predicate = (!icmp_ln882)> <Delay = 0.00>
ST_6 : Operation 70 [1/1] (0.00ns) (grouped into LUT with out node add_ln69_3)   --->   "%i_V_i_cast = zext i3 %i_V"   --->   Operation 70 'zext' 'i_V_i_cast' <Predicate = (!icmp_ln882)> <Delay = 0.00>
ST_6 : Operation 71 [1/1] (0.00ns)   --->   "%specloopname_ln1620 = specloopname void @_ssdm_op_SpecLoopName, void @empty_2"   --->   Operation 71 'specloopname' 'specloopname_ln1620' <Predicate = (!icmp_ln882)> <Delay = 0.00>
ST_6 : Operation 72 [1/1] (0.00ns)   --->   "%tmp_1 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %Y_step_V_2, i32"   --->   Operation 72 'bitselect' 'tmp_1' <Predicate = (!icmp_ln882)> <Delay = 0.00>
ST_6 : Operation 73 [1/1] (1.27ns)   --->   "%ashr_ln803 = ashr i32 %X_step_V_1, i32 %i_V_i_cast3"   --->   Operation 73 'ashr' 'ashr_ln803' <Predicate = (!icmp_ln882)> <Delay = 1.27> <CoreInst = "Shift">   --->   Core 13 'Shift' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 74 [1/1] (0.00ns) (grouped into LUT with out node add_ln69_3)   --->   "%shl_ln73 = shl i6, i6 %i_V_i_cast" [src/polar_clip.cpp:73->src/polar_clip.cpp:159]   --->   Operation 74 'shl' 'shl_ln73' <Predicate = (!icmp_ln882)> <Delay = 0.00> <CoreInst = "Shift">   --->   Core 13 'Shift' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 75 [1/1] (0.00ns) (grouped into LUT with out node add_ln69_3)   --->   "%zext_ln1465 = zext i6 %shl_ln73"   --->   Operation 75 'zext' 'zext_ln1465' <Predicate = (!icmp_ln882)> <Delay = 0.00>
ST_6 : Operation 76 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln69_3 = add i32 %zext_ln1465, i32 %rotation_index_V"   --->   Operation 76 'add' 'add_ln69_3' <Predicate = (!icmp_ln882)> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.12> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 77 [1/1] (0.00ns) (grouped into LUT with out node add_ln69_4)   --->   "%shr_i_i553148_i = lshr i32 %Y_step_V_2, i32 %i_V_i_cast3"   --->   Operation 77 'lshr' 'shr_i_i553148_i' <Predicate = (!icmp_ln882)> <Delay = 0.00> <CoreInst = "Shift">   --->   Core 13 'Shift' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 78 [1/1] (1.27ns) (out node of the LUT)   --->   "%add_ln69_4 = add i32 %shr_i_i553148_i, i32 %X_step_V_1"   --->   Operation 78 'add' 'add_ln69_4' <Predicate = (!icmp_ln882)> <Delay = 1.27> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.12> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 79 [1/1] (1.14ns)   --->   "%sub_ln69_2 = sub i32 %Y_step_V_2, i32 %ashr_ln803"   --->   Operation 79 'sub' 'sub_ln69_2' <Predicate = (!icmp_ln882)> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.12> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 80 [1/1] (0.00ns) (grouped into LUT with out node sub_ln69_3)   --->   "%ashr_ln803_1 = ashr i32 %Y_step_V_2, i32 %i_V_i_cast3"   --->   Operation 80 'ashr' 'ashr_ln803_1' <Predicate = (!icmp_ln882)> <Delay = 0.00> <CoreInst = "Shift">   --->   Core 13 'Shift' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 81 [1/1] (1.27ns) (out node of the LUT)   --->   "%sub_ln69_3 = sub i32 %X_step_V_1, i32 %ashr_ln803_1"   --->   Operation 81 'sub' 'sub_ln69_3' <Predicate = (!icmp_ln882)> <Delay = 1.27> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.12> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 82 [1/1] (1.14ns)   --->   "%add_ln69_5 = add i32 %ashr_ln803, i32 %Y_step_V_2"   --->   Operation 82 'add' 'add_ln69_5' <Predicate = (!icmp_ln882)> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.12> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 83 [1/1] (0.28ns)   --->   "%select_ln886 = select i1 %tmp_1, i32 %rotation_index_V, i32 %add_ln69_3"   --->   Operation 83 'select' 'select_ln886' <Predicate = (!icmp_ln882)> <Delay = 0.28> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 84 [1/1] (0.28ns)   --->   "%select_ln886_1 = select i1 %tmp_1, i32 %add_ln69_5, i32 %sub_ln69_2"   --->   Operation 84 'select' 'select_ln886_1' <Predicate = (!icmp_ln882)> <Delay = 0.28> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 85 [1/1] (0.28ns)   --->   "%select_ln886_2 = select i1 %tmp_1, i32 %sub_ln69_3, i32 %add_ln69_4"   --->   Operation 85 'select' 'select_ln886_2' <Predicate = (!icmp_ln882)> <Delay = 0.28> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 86 [1/1] (0.71ns)   --->   "%add_ln695 = add i3 %i_V, i3"   --->   Operation 86 'add' 'add_ln695' <Predicate = (!icmp_ln882)> <Delay = 0.71> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.12> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 87 [1/1] (0.00ns)   --->   "%br_ln71 = br void" [src/polar_clip.cpp:71->src/polar_clip.cpp:159]   --->   Operation 87 'br' 'br_ln71' <Predicate = (!icmp_ln882)> <Delay = 0.00>

State 7 <SV = 6> <Delay = 1.29>
ST_7 : Operation 88 [1/1] (0.00ns)   --->   "%trunc_ln69 = trunc i32 %X_step_V_1"   --->   Operation 88 'trunc' 'trunc_ln69' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 89 [4/4] (0.69ns) (root node of the DSP)   --->   "%mul_ln86 = mul i25, i25 %trunc_ln69" [src/polar_clip.cpp:86->src/polar_clip.cpp:159]   --->   Operation 89 'mul' 'mul_ln86' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 90 [1/1] (0.00ns)   --->   "%zext_ln538 = zext i32 %rotation_index_V"   --->   Operation 90 'zext' 'zext_ln538' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 91 [1/1] (0.00ns)   --->   "%rotation_sin_lut_addr = getelementptr i16 %rotation_sin_lut, i64, i64 %zext_ln538"   --->   Operation 91 'getelementptr' 'rotation_sin_lut_addr' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 92 [2/2] (1.29ns)   --->   "%rotation_sin_lut_load = load i6 %rotation_sin_lut_addr"   --->   Operation 92 'load' 'rotation_sin_lut_load' <Predicate = true> <Delay = 1.29> <CoreInst = "ROM">   --->   Core 41 'ROM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 16> <Depth = 64> <ROM>
ST_7 : Operation 93 [1/1] (0.00ns)   --->   "%rotation_cos_lut_addr = getelementptr i16 %rotation_cos_lut, i64, i64 %zext_ln538"   --->   Operation 93 'getelementptr' 'rotation_cos_lut_addr' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 94 [2/2] (1.29ns)   --->   "%rotation_cos_lut_load = load i6 %rotation_cos_lut_addr"   --->   Operation 94 'load' 'rotation_cos_lut_load' <Predicate = true> <Delay = 1.29> <CoreInst = "ROM">   --->   Core 41 'ROM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 16> <Depth = 64> <ROM>
ST_7 : Operation 95 [1/1] (0.80ns)   --->   "%icmp_ln890 = icmp_sgt  i32 %mag_sq_V, i32"   --->   Operation 95 'icmp' 'icmp_ln890' <Predicate = true> <Delay = 0.80> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 3.30>
ST_8 : Operation 96 [3/4] (0.69ns) (root node of the DSP)   --->   "%mul_ln86 = mul i25, i25 %trunc_ln69" [src/polar_clip.cpp:86->src/polar_clip.cpp:159]   --->   Operation 96 'mul' 'mul_ln86' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 97 [1/2] (1.29ns)   --->   "%rotation_sin_lut_load = load i6 %rotation_sin_lut_addr"   --->   Operation 97 'load' 'rotation_sin_lut_load' <Predicate = true> <Delay = 1.29> <CoreInst = "ROM">   --->   Core 41 'ROM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 16> <Depth = 64> <ROM>
ST_8 : Operation 98 [1/1] (1.12ns)   --->   "%sub_ln69 = sub i16, i16 %rotation_sin_lut_load"   --->   Operation 98 'sub' 'sub_ln69' <Predicate = (tmp & icmp_ln890)> <Delay = 1.12> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.12> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 99 [1/1] (0.29ns)   --->   "%select_ln90 = select i1 %tmp, i16 %sub_ln69, i16 %rotation_sin_lut_load" [src/polar_clip.cpp:90->src/polar_clip.cpp:159]   --->   Operation 99 'select' 'select_ln90' <Predicate = (icmp_ln890)> <Delay = 0.29> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 100 [1/1] (0.14ns)   --->   "%xor_ln95 = xor i1 %ret_V, i1" [src/polar_clip.cpp:95->src/polar_clip.cpp:159]   --->   Operation 100 'xor' 'xor_ln95' <Predicate = true> <Delay = 0.14> <CoreInst = "LogicGate">   --->   Core 12 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 101 [1/2] (1.29ns)   --->   "%rotation_cos_lut_load = load i6 %rotation_cos_lut_addr"   --->   Operation 101 'load' 'rotation_cos_lut_load' <Predicate = true> <Delay = 1.29> <CoreInst = "ROM">   --->   Core 41 'ROM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 16> <Depth = 64> <ROM>
ST_8 : Operation 102 [1/1] (1.12ns)   --->   "%sub_ln69_1 = sub i16, i16 %rotation_cos_lut_load"   --->   Operation 102 'sub' 'sub_ln69_1' <Predicate = (tmp & icmp_ln890)> <Delay = 1.12> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.12> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 103 [1/1] (0.29ns)   --->   "%select_ln101 = select i1 %tmp, i16 %sub_ln69_1, i16 %rotation_cos_lut_load" [src/polar_clip.cpp:101->src/polar_clip.cpp:159]   --->   Operation 103 'select' 'select_ln101' <Predicate = (icmp_ln890)> <Delay = 0.29> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 104 [1/1] (0.14ns)   --->   "%and_ln95 = and i1 %xor_ln894_1, i1 %ret_V" [src/polar_clip.cpp:95->src/polar_clip.cpp:159]   --->   Operation 104 'and' 'and_ln95' <Predicate = true> <Delay = 0.14> <CoreInst = "LogicGate">   --->   Core 12 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 105 [1/1] (0.00ns) (grouped into LUT with out node select_ln95_1)   --->   "%select_ln95 = select i1 %and_ln95, i16 %select_ln90, i16 %select_ln101" [src/polar_clip.cpp:95->src/polar_clip.cpp:159]   --->   Operation 105 'select' 'select_ln95' <Predicate = (icmp_ln890)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 106 [1/1] (0.14ns)   --->   "%and_ln95_1 = and i1 %xor_ln894_1, i1 %xor_ln95" [src/polar_clip.cpp:95->src/polar_clip.cpp:159]   --->   Operation 106 'and' 'and_ln95_1' <Predicate = true> <Delay = 0.14> <CoreInst = "LogicGate">   --->   Core 12 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 107 [1/1] (0.29ns) (out node of the LUT)   --->   "%select_ln95_1 = select i1 %and_ln95_1, i16 %select_ln90, i16 %select_ln95" [src/polar_clip.cpp:95->src/polar_clip.cpp:159]   --->   Operation 107 'select' 'select_ln95_1' <Predicate = (icmp_ln890)> <Delay = 0.29> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 108 [1/1] (0.00ns) (grouped into LUT with out node and_ln106)   --->   "%xor_ln894 = xor i1 %xor_ln894_1, i1"   --->   Operation 108 'xor' 'xor_ln894' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 12 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 109 [1/1] (0.14ns) (out node of the LUT)   --->   "%and_ln106 = and i1 %xor_ln95, i1 %xor_ln894" [src/polar_clip.cpp:106->src/polar_clip.cpp:159]   --->   Operation 109 'and' 'and_ln106' <Predicate = true> <Delay = 0.14> <CoreInst = "LogicGate">   --->   Core 12 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 110 [1/1] (0.29ns) (out node of the LUT)   --->   "%cs_fixed_real_V = select i1 %and_ln106, i16 %select_ln101, i16 %select_ln95_1"   --->   Operation 110 'select' 'cs_fixed_real_V' <Predicate = (icmp_ln890)> <Delay = 0.29> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 111 [1/1] (0.00ns) (grouped into LUT with out node sub_ln95)   --->   "%select_ln95_2 = select i1 %and_ln95, i16 %rotation_cos_lut_load, i16 %rotation_sin_lut_load" [src/polar_clip.cpp:95->src/polar_clip.cpp:159]   --->   Operation 111 'select' 'select_ln95_2' <Predicate = (icmp_ln890)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 112 [1/1] (1.12ns) (out node of the LUT)   --->   "%sub_ln95 = sub i16, i16 %select_ln95_2" [src/polar_clip.cpp:95->src/polar_clip.cpp:159]   --->   Operation 112 'sub' 'sub_ln95' <Predicate = (icmp_ln890)> <Delay = 1.12> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.12> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 113 [1/1] (0.00ns) (grouped into LUT with out node cs_fixed_imag_V)   --->   "%select_ln95_3 = select i1 %and_ln95_1, i16 %rotation_cos_lut_load, i16 %sub_ln95" [src/polar_clip.cpp:95->src/polar_clip.cpp:159]   --->   Operation 113 'select' 'select_ln95_3' <Predicate = (icmp_ln890)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 114 [1/1] (0.29ns) (out node of the LUT)   --->   "%cs_fixed_imag_V = select i1 %and_ln106, i16 %rotation_sin_lut_load, i16 %select_ln95_3"   --->   Operation 114 'select' 'cs_fixed_imag_V' <Predicate = (icmp_ln890)> <Delay = 0.29> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 9 <SV = 8> <Delay = 0.69>
ST_9 : Operation 115 [2/4] (0.69ns) (root node of the DSP)   --->   "%mul_ln86 = mul i25, i25 %trunc_ln69" [src/polar_clip.cpp:86->src/polar_clip.cpp:159]   --->   Operation 115 'mul' 'mul_ln86' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>

State 10 <SV = 9> <Delay = 1.81>
ST_10 : Operation 116 [1/4] (0.00ns) (root node of the DSP)   --->   "%mul_ln86 = mul i25, i25 %trunc_ln69" [src/polar_clip.cpp:86->src/polar_clip.cpp:159]   --->   Operation 116 'mul' 'mul_ln86' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_10 : Operation 117 [1/1] (0.00ns)   --->   "%trunc_ln = partselect i16 @_ssdm_op_PartSelect.i16.i25.i32.i32, i25 %mul_ln86, i32, i32"   --->   Operation 117 'partselect' 'trunc_ln' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 118 [1/1] (1.12ns)   --->   "%add_ln69 = add i16, i16 %trunc_ln"   --->   Operation 118 'add' 'add_ln69' <Predicate = true> <Delay = 1.12> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.12> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 119 [4/4] (0.69ns) (root node of the DSP)   --->   "%ovalue_real_V = mul i16 %cs_fixed_real_V, i16 %add_ln69" [src/polar_clip.cpp:169]   --->   Operation 119 'mul' 'ovalue_real_V' <Predicate = (icmp_ln890)> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_10 : Operation 120 [4/4] (0.69ns) (root node of the DSP)   --->   "%ovalue_imag_V = mul i16 %cs_fixed_imag_V, i16 %add_ln69" [src/polar_clip.cpp:170]   --->   Operation 120 'mul' 'ovalue_imag_V' <Predicate = (icmp_ln890)> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>

State 11 <SV = 10> <Delay = 0.69>
ST_11 : Operation 121 [3/4] (0.69ns) (root node of the DSP)   --->   "%ovalue_real_V = mul i16 %cs_fixed_real_V, i16 %add_ln69" [src/polar_clip.cpp:169]   --->   Operation 121 'mul' 'ovalue_real_V' <Predicate = (icmp_ln890)> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_11 : Operation 122 [3/4] (0.69ns) (root node of the DSP)   --->   "%ovalue_imag_V = mul i16 %cs_fixed_imag_V, i16 %add_ln69" [src/polar_clip.cpp:170]   --->   Operation 122 'mul' 'ovalue_imag_V' <Predicate = (icmp_ln890)> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>

State 12 <SV = 11> <Delay = 0.69>
ST_12 : Operation 123 [2/4] (0.69ns) (root node of the DSP)   --->   "%ovalue_real_V = mul i16 %cs_fixed_real_V, i16 %add_ln69" [src/polar_clip.cpp:169]   --->   Operation 123 'mul' 'ovalue_real_V' <Predicate = (icmp_ln890)> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_12 : Operation 124 [2/4] (0.69ns) (root node of the DSP)   --->   "%ovalue_imag_V = mul i16 %cs_fixed_imag_V, i16 %add_ln69" [src/polar_clip.cpp:170]   --->   Operation 124 'mul' 'ovalue_imag_V' <Predicate = (icmp_ln890)> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>

State 13 <SV = 12> <Delay = 0.29>
ST_13 : Operation 125 [1/4] (0.00ns) (root node of the DSP)   --->   "%ovalue_real_V = mul i16 %cs_fixed_real_V, i16 %add_ln69" [src/polar_clip.cpp:169]   --->   Operation 125 'mul' 'ovalue_real_V' <Predicate = (icmp_ln890)> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_13 : Operation 126 [1/4] (0.00ns) (root node of the DSP)   --->   "%ovalue_imag_V = mul i16 %cs_fixed_imag_V, i16 %add_ln69" [src/polar_clip.cpp:170]   --->   Operation 126 'mul' 'ovalue_imag_V' <Predicate = (icmp_ln890)> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_13 : Operation 127 [1/1] (0.29ns)   --->   "%select_ln890 = select i1 %icmp_ln890, i16 %ovalue_imag_V, i16"   --->   Operation 127 'select' 'select_ln890' <Predicate = true> <Delay = 0.29> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_13 : Operation 128 [1/1] (0.29ns)   --->   "%select_ln890_1 = select i1 %icmp_ln890, i16 %ovalue_real_V, i16"   --->   Operation 128 'select' 'select_ln890_1' <Predicate = true> <Delay = 0.29> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_13 : Operation 129 [1/1] (0.00ns)   --->   "%tmp_data_V = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i16.i16, i16 %select_ln890, i16 %select_ln890_1" [src/polar_clip.cpp:179]   --->   Operation 129 'bitconcatenate' 'tmp_data_V' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 130 [2/2] (0.00ns)   --->   "%write_ln336 = write void @_ssdm_op_Write.axis.volatile.i32P.i4P.i4P.i1P, i32 %out_sample_V_data_V, i4 %out_sample_V_keep_V, i4 %out_sample_V_strb_V, i1 %out_sample_V_last_V, i32 %tmp_data_V, i4, i4, i1"   --->   Operation 130 'write' 'write_ln336' <Predicate = true> <Delay = 0.00> <CoreInst = "axis">   --->   Core 57 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

State 14 <SV = 13> <Delay = 0.00>
ST_14 : Operation 131 [1/2] (0.00ns)   --->   "%write_ln336 = write void @_ssdm_op_Write.axis.volatile.i32P.i4P.i4P.i1P, i32 %out_sample_V_data_V, i4 %out_sample_V_keep_V, i4 %out_sample_V_strb_V, i1 %out_sample_V_last_V, i32 %tmp_data_V, i4, i4, i1"   --->   Operation 131 'write' 'write_ln336' <Predicate = true> <Delay = 0.00> <CoreInst = "axis">   --->   Core 57 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_14 : Operation 132 [1/1] (0.00ns)   --->   "%ret_ln185 = ret" [src/polar_clip.cpp:185]   --->   Operation 132 'ret' 'ret_ln185' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 0.698ns
The critical path consists of the following:
	axis read on port 'in_sample_V_data_V' [25]  (0 ns)
	'mul' operation of DSP[31] ('value_real_sq.V', src/polar_clip.cpp:151) [31]  (0.698 ns)

 <State 2>: 1.09ns
The critical path consists of the following:
	'mul' operation of DSP[35] ('value_imag_sq.V', src/polar_clip.cpp:152) [34]  (1.09 ns)

 <State 3>: 1.09ns
The critical path consists of the following:
	'mul' operation of DSP[35] ('value_imag_sq.V', src/polar_clip.cpp:152) [34]  (1.09 ns)

 <State 4>: 0.831ns
The critical path consists of the following:
	'mul' operation of DSP[31] ('value_real_sq.V', src/polar_clip.cpp:151) [31]  (0 ns)
	'add' operation of DSP[35] ('mag_sq.V') [35]  (0.831 ns)

 <State 5>: 2.93ns
The critical path consists of the following:
	'sub' operation ('abs_I.V') [38]  (1.12 ns)
	'select' operation ('select_ln46', src/polar_clip.cpp:46->src/polar_clip.cpp:159) [39]  (0.327 ns)
	'sub' operation ('Y_step.V') [48]  (1.12 ns)
	'select' operation ('select_ln63', src/polar_clip.cpp:63->src/polar_clip.cpp:159) [50]  (0.359 ns)

 <State 6>: 2.71ns
The critical path consists of the following:
	'phi' operation ('X_step.V') with incoming values : ('sext_ln41', src/polar_clip.cpp:41->src/polar_clip.cpp:159) ('select_ln886_2') [55]  (0 ns)
	'ashr' operation ('ashr_ln803') [67]  (1.28 ns)
	'sub' operation ('sub_ln69_2') [73]  (1.14 ns)
	'select' operation ('select_ln886_1') [78]  (0.286 ns)

 <State 7>: 1.3ns
The critical path consists of the following:
	'getelementptr' operation ('rotation_sin_lut_addr') [87]  (0 ns)
	'load' operation ('rotation_sin_lut_load') on array 'rotation_sin_lut' [88]  (1.3 ns)

 <State 8>: 3.3ns
The critical path consists of the following:
	'load' operation ('rotation_sin_lut_load') on array 'rotation_sin_lut' [88]  (1.3 ns)
	'sub' operation ('sub_ln69') [89]  (1.12 ns)
	'select' operation ('select_ln90', src/polar_clip.cpp:90->src/polar_clip.cpp:159) [90]  (0.294 ns)
	'select' operation ('select_ln95_1', src/polar_clip.cpp:95->src/polar_clip.cpp:159) [99]  (0.294 ns)
	'select' operation ('cos_fixed.V') [102]  (0.294 ns)

 <State 9>: 0.698ns
The critical path consists of the following:
	'mul' operation of DSP[84] ('mul_ln86', src/polar_clip.cpp:86->src/polar_clip.cpp:159) [84]  (0.698 ns)

 <State 10>: 1.82ns
The critical path consists of the following:
	'mul' operation of DSP[84] ('mul_ln86', src/polar_clip.cpp:86->src/polar_clip.cpp:159) [84]  (0 ns)
	'add' operation ('add_ln69') [108]  (1.12 ns)
	'mul' operation of DSP[109] ('ovalue.real.V', src/polar_clip.cpp:169) [109]  (0.698 ns)

 <State 11>: 0.698ns
The critical path consists of the following:
	'mul' operation of DSP[109] ('ovalue.real.V', src/polar_clip.cpp:169) [109]  (0.698 ns)

 <State 12>: 0.698ns
The critical path consists of the following:
	'mul' operation of DSP[109] ('ovalue.real.V', src/polar_clip.cpp:169) [109]  (0.698 ns)

 <State 13>: 0.294ns
The critical path consists of the following:
	'mul' operation of DSP[110] ('ovalue.imag.V', src/polar_clip.cpp:170) [110]  (0 ns)
	'select' operation ('select_ln890') [111]  (0.294 ns)

 <State 14>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
